void LinClosureBenchmark(const std::string &filename){
    size_t impl_max = 2000;
    size_t attr_max = 2000;

    std::ofstream file(filename);

    theory L;
    FCA::BitSet closure, trash;
    double avg, ratio;

    file << "impl,attr,avg,ratio" << std::endl;

    for(size_t i = 100; i < impl_max + 1; i += 100){
        for(size_t j = 100; j < attr_max + 1; j += 100){

            boost::timer::cpu_timer t;
            t.stop();

            for (int k = 0; k < 10; ++k){
                ImplicationTools::GenerateTheory(L, j, i);

                for(int l = 0; l < 10; ++l){
                    closure = ImplicationTools::GetRandomBitSet(j);
                    trash.resize(j);


                    for(int m = 0; m < 10; ++m){
                        t.resume();
                        FCA::LinClosure::Apply(closure, L, trash);
                        t.stop();
                    }

                }
            }

            avg = std::stod(t.format(6, "%t")) / 1000;
            ratio = ((double) i * j) / avg;
            file << i << "," << j << "," << avg << "," << ratio << std::endl;

        }
    }

    file.close();
}


void LinClosureHardBenchmark(const std::string &filename){

    std::ofstream file(filename);

    theory L;
    FCA::BitSet closure, trash;
    FCA::BitSet premise, conclusion;
    double avg, exec;
    int k;

    file << "n,time,avg" << std::endl;

    for(size_t n = 25; n <= 1000; n += 25){
        L.clear();
        L.resize(n - 1);
        conclusion.resize(n);
        premise.resize(n);
        closure.resize(n);
        trash.resize(n);
        conclusion.reset();
        premise.reset();
        closure.reset();
        closure.set(0);

        k = 0;

        for (int i = (int) n - 2; i >= 0; --i){
            premise.set((size_t) i);
            conclusion.set((size_t) i + 1);
            L[k] = FCA::ImplicationInd(premise, conclusion);
            ++k;
            premise.reset();
            conclusion.reset();
        }

        boost::timer::cpu_timer t;
        for(int i = 0; i < 1000; ++i){
            FCA::LinClosure::Apply(closure, L, trash);
        }

        exec = std::stod(t.format(6, "%t"));
        avg = exec / 1000.;

        file << n << "," << exec << "," << avg << std::endl;

    }

    file.close();
}




## Appetizers: a bit of theory

### Some definitions

The reader is expected to have background in set theory, and *Formal Concept Analysis* related mathematical fields (see **[9, 10]**). Let $\Sigma$ be a set (of <font color=#16a085> attributes </font>).

> **Definition 1:** An application $\varphi : \Sigma \mapsto \Sigma$ is a <font color=#16a085> closure operator </font> iff for all $X, Y \subseteq \Sigma$:
>
    1. $X \subseteq \varphi(X) \quad$ (*extensive*),
    2. $X \subseteq Y \implies \varphi(X) \subseteq \varphi(Y) \quad$ (*monotone*),
    3. $\varphi(X) = \varphi(\varphi(X)) \quad$ (*idempotent*).


To each closure operator $\varphi$ over $\Sigma$ is associated a closure system
$\Sigma^{\varphi}$ as in the next definition.

> **Definition 2:** A family of set $\Sigma^{\varphi} \subseteq 2^{\Sigma}$ is
a <font color=#16a085> closure system </font> if and only if:
>
    1. $\Sigma \in \Sigma^{\varphi}$,
    2. $\bigcap_{s \in \mathcal{S}} s \in \Sigma^{\varphi}, \quad \forall \mathcal{S} \subseteq \Sigma^{\varphi}$.

Now let us focus on implications, being our main object.

> **Definition 3:** An <font color=#16a085> implication </font> $A \longrightarrow B$ over $\Sigma$ is a pair of subsets $A, B \subset \Sigma$.

> **Definition 4:** A subset $M$ of $\Sigma$ is a <font color=#16a085> model </font>
for some implication $A \longrightarrow B$ if $A \nsubseteq M \lor B \subseteq M$. In
such case, we write $M \models A \longrightarrow B$.

A set $\mathcal{L}$ of implications is called an <font color=#16a085> implication base </font>. It is similar to *Horn formulae* of propositional logic, hence the Horn minimization name. Of course, every implication of $\mathcal{L}$ is defined over the same $\Sigma$. A set $M \subseteq \Sigma$ is a model for $\mathcal{L}$ if it is a model for all implications of $\mathcal{L}$. The set of models of $\mathcal{I}$ is a closure system,
$\Sigma^{\mathcal{L}}$, and the corresponding closure operator $\mathcal{L}(\dot)$ associate to $X \subseteq \Sigma$ the smallest model of $\Sigma^{\mathcal{L}}$:

  \[ \mathcal{L}(X) := \bigcap \{ A | X \subseteq A, A \in \Sigma^{\mathcal{L}} \} \]

Two bases are equivalent if they have the same set of models. This leads to a definition
of minimality.

> **Definition 5:** $\mathcal{L}$ is <font color=#16a085> minimum </font> if there is
no equivalent base $\mathcal{L}'$ with fewer implications.

In particular, the <font color=#16a085> Duquenne-Guigues </font> (or <font color=#16a085> canonical </font>) base, defined as (see **[11]**):

  \[ \{ P \longrightarrow \mathcal{L}(P) \; | \; P \textit{ pseudo-closed } \} \]

is minimum. To be precise, let us finally remind what is pseudo-closedness.

> **Definition 6:** A set $P \subseteq \Sigma$ is a <font color=#16a085> pseudo-closed set </font> with respect to $\mathcal{L}(\dot)$ if:
>
    1. $P \neq \mathcal{L}(P)$,
    2. for $Q \subset P$, if $Q$ is pseudo-closed then $\mathcal{L}(Q) \subseteq P$.

To conclude this section, let us observe some examples. First, let $\Sigma = \{ a, b, c \}$ and $\mathcal{L} = \{ ab \longrightarrow c, \ c \longrightarrow b \}. The corresponding set of models is $\{ \emptyset, b, a, bc, abc \}$. This closure system can be represented as a Hasse diagram, notably because it is a complete lattice equipped within $\subseteq$ as order:

```

           abc
            o
           / \          Models of L, ordered
          /   \             by set-inclusion.
         /     \
    bc  o       \
        |        o a
    b   o       /
         \     /
          \   /
           \ /
            o
            0

```

Another example to consider, $\Sigma = \{ a, b, c, d, e, f \}$ and $\mathcal{L} = \{ ab \longrightarrow cde, cd \longrightarrow f, c \longrightarrow a, d \longrightarrow b, abcd \longrightarrow ef  \}$. This basis is not minimum, some implications are  <font color=#16a085> redundant </font>: they can be removed without altering the knowledge they
depict. This is the case for the last one. The canonical basis here will be

\[ \mathcal{L}_c = \{ ab \longrightarrow abcdef, c \longrightarrow ac, d \longrightarrow bd \}  \]
